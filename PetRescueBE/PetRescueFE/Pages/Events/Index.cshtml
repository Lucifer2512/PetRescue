@page
@model PetRescueFE.Pages.Events.IndexModel

@{
    ViewData["Title"] = "Events";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<style>
    .page-container {
        max-width: 900px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        font-family: Arial, Helvetica, sans-serif;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        color: #3572EF;
    }

    .btn-create {
        background-color: #2c8a2c;
        color: white;
        border-radius: 20px;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        text-decoration: none;
    }

        .btn-create:hover {
            background-color: #247524;
        }

    .event-card {
        margin-bottom: 20px;
        transition: transform 0.2s;
        border: none;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .event-card:hover {
            transform: translateY(-5px);
        }


    .event-image {
        height: 200px;
        object-fit: cover;
        width: 100%;
        border-radius: 10px 10px 0 0;
    }


    .event-description {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .pagination {
        margin-bottom: 2rem;
    }

    .page-link {
        color: #2c3e50;
        border-color: #dee2e6;
    }

    .page-item.active .page-link {
        background-color: #2c3e50;
        border-color: #2c3e50;
    }

    .page-link:hover {
        color: #1a252f;
        background-color: #e9ecef;
        border-color: #dee2e6;
    }

    .page-item.disabled .page-link {
        color: #6c757d;
    }
</style>
<div class="page-container">
    <div class="page-header">
        <h1>Upcoming Events</h1>
        @if (Model.CanEdit)
        {
            <a asp-page="Create" class="btn-create">
                <i class="bi bi-plus-circle"></i>Create
            </a>
        }
    </div>
    <div class="container">
        @* Keep the inner container for the grid layout *@
        @if (!string.IsNullOrEmpty(Model.NoEventsMessage))
        {
            <div class="alert alert-info" role="alert">
                @Model.NoEventsMessage
            </div>
        }
        else
        {
            <div class="row">
                @* Grid layout for event cards *@
                @foreach (var item in Model.Event)
                {
                    <div class="col-md-6 col-lg-4">
                        @* Responsive columns *@
                        <div class="card shadow event-card">
                            @if (!string.IsNullOrEmpty(item.ImageData))
                            {
                                <img src="data:image/jpeg;base64,@item.ImageData" class="card-img-top event-image" alt="@item.Name">
                            }
                            else
                            {
                                <img src="https://placehold.co/600x400?text=No+Image" class="card-img-top event-image" alt="Default Event Image">
                            }

                            <div class="card-body">
                                <h5 class="card-title">@item.Name</h5>
                                <p class="card-text text-muted">
                                    <i class="bi bi-geo-alt"></i> @item.Location
                                </p>
                                <p class="card-text event-description">@item.Description</p>

                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <i class="bi bi-calendar"></i> @item.StartDateTime?.ToString("MMM dd, yyyy")
                                    </small>
                                    <span class="badge @(item.Status?.ToLower() == "active" ? "bg-success" : "bg-secondary")">
                                        @item.Status
                                    </span>
                                </div>
                            </div>

                            <div class="card-footer bg-transparent">
                                <div class="d-flex gap-2">
                                    <a asp-page="./Details" asp-route-id="@item.EventId" class="btn btn-outline-primary btn-sm">
                                        <i class="bi bi-info-circle"></i> Details
                                    </a>
                                    @if (Model.CanEdit)
                                    {
                                        <a asp-page="./Edit" asp-route-id="@item.EventId" class="btn btn-outline-secondary btn-sm">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                        @* <a asp-page="./Delete" asp-route-id="@item.EventId" class="btn btn-outline-danger btn-sm">
                                            <i class="bi bi-trash"></i> Delete
                                        </a> *@
                                    }
                                    @if (Model.CanDonate)
                                    {
                                        <a asp-page="/DonationPage/Payment"
                                           asp-route-eventId="@item.EventId"
                                           asp-route-shelterId="@item.ShelterId"
                                           class="btn btn-outline-success btn-sm">
                                            <i class="bi bi-heart"></i> Donate
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>


    <div class="container mt-4">
        @* Pagination container *@
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.CurrentPage - 1)">
                            <i class="bi bi-chevron-left"></i> Previous
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link"><i class="bi bi-chevron-left"></i> Previous</span>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-pageIndex="@i">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.CurrentPage + 1)">
                            Next <i class="bi bi-chevron-right"></i>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Next <i class="bi bi-chevron-right"></i></span>
                    </li>
                }
            </ul>
        </nav>
    </div>
